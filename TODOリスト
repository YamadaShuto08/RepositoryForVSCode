import 'package:flutter/material.dart'; // Flutter の基本UIパッケージをインポート

// アプリ起動時に呼ばれる関数
void main() {
  runApp(MyApp()); // MyApp ウィジェットをアプリとして起動
}

// アプリ全体のルートウィジェット
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      // Material Design ベースのアプリ
      title: 'TODO App', // アプリのタイトル
      theme: ThemeData(
        primarySwatch: Colors.blue, // 色テーマ（青系）
      ),
      home: TodoListScreen(), // 最初に表示する画面（タスクリスト）
    );
  }
}

// タスク1つ分のデータを管理するクラス（タイトルと完了状態）
class TodoItem {
  String title; // タスクの名前
  bool isDone; // 完了したかどうか

  TodoItem(this.title, this.isDone); // コンストラクタ
}

// タスクリスト画面（チェック付きリスト）の StatefulWidget
class TodoListScreen extends StatefulWidget {
  @override
  _TodoListScreenState createState() => _TodoListScreenState();
}

// StatefulWidget の状態を管理するクラス
class _TodoListScreenState extends State<TodoListScreen> {
  final List<TodoItem> _todos = []; // タスクを保存するリスト
  final TextEditingController _controller =
      TextEditingController(); // 入力欄用コントローラ

  // タスクを追加する処理
  void _addTodo() {
    String text = _controller.text.trim(); // 入力欄のテキストを取得・トリミング
    if (text.isNotEmpty) {
      // 空でなければ追加
      setState(() {
        _todos.add(TodoItem(text, false)); // 新しいタスクをリストに追加（未完了状態）
        _controller.clear(); // 入力欄をクリア
      });
    }
  }

  // タスクのチェック状態を切り替える処理
  void _toggleTodo(int index) {
    setState(() {
      _todos[index].isDone = !_todos[index].isDone; // 完了状態を反転
    });
  }

  // 画面のUI構築
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('TODOリスト')), // 上部バー（タイトル）
      body: Padding(
        padding: const EdgeInsets.all(16.0), // 全体にパディング
        child: Column(
          // 縦方向にウィジェットを並べる
          children: [
            // タスク入力欄と追加ボタン
            Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: _controller, // 入力コントローラ
                    decoration: const InputDecoration(
                      labelText: 'タスクを入力', // ラベル
                    ),
                  ),
                ),
                IconButton(
                  icon: const Icon(Icons.add), // ＋マークのアイコンボタン
                  onPressed: _addTodo, // ボタンが押されたらタスク追加
                ),
              ],
            ),
            const SizedBox(height: 16), // 下にスペースを空ける
            // タスクリスト表示エリア（ListView）
            Expanded(
              child: ListView.builder(
                itemCount: _todos.length, // タスクリストの数だけ表示
                itemBuilder: (context, index) {
                  final todo = _todos[index]; // 対象のタスクデータを取得
                  return CheckboxListTile(
                    // チェック付きリストアイテム
                    title: Text(
                      todo.title, // タスク名を表示
                      style: TextStyle(
                        decoration:
                            todo.isDone
                                ? TextDecoration
                                    .lineThrough // 完了時は取り消し線
                                : TextDecoration.none, // 未完了はそのまま
                      ),
                    ),
                    value: todo.isDone, // チェック状態を反映
                    onChanged: (bool? value) {
                      _toggleTodo(index); // チェックが押されたら状態を更新
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
